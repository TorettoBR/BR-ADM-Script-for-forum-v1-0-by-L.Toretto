// ==UserScript==
// @name         BR | ADM Script for Forum
// @namespace    https://forum.blackrussia.online
// @version      1.0
// @description  try to take over the world!
// @author       L.Toretto
// @match        https://forum.blackrussia.online/index.php?threads/*
// @include      https://forum.blackrussia.online/index.php?threads/
// @grant        none
// @license 	 MIT
// @collaborator L.Toretto
// @icon https://icons.iconarchive.com/icons/aha-soft/iron-man/48/Ironman-Mask-3-Old-icon.png
// @copyright 2021, L.Toretto (https://openuserjs.org/users/L.Toretto)
// @updateURL https://openuserjs.org/meta/L.Toretto/BR_ADM_Script_for_Forum.meta.js
// ==/UserScript==

(function () {
  'use strict';
const UNACCEPT_PREFIX = 4; // Prefix that will be set when thread closes
const ACCEPT_PREFIX = 8; // Prefix that will be set when thread accepted
const PIN_PREFIX = 2; // Prefix that will be set when thread pins
const COMMAND_PREFIX = 10; // Prefix that will be set when thread send to project team
const WATCHED_PREFIX = 9;
const CLOSE_PREFIX = 7;
const buttons = [
	{
	  title: 'Запрошу док-ва',
	  content:
		'[CENTER][FONT=times new roman][SIZE=4][I][COLOR=rgb(0, 255, 255)]Добрый день, уважаемый игрок.[/COLOR][/I][/SIZE][/FONT]<br><br>' +
		"[SIZE=4][I][COLOR=rgb(209, 213, 216)][FONT=times new roman]Запрошу доказательства у администратора. [/FONT][/COLOR][/I]<br><br>" +
		'[FONT=times new roman][I][COLOR=rgb(209, 213, 216)]Ожидайте, пожалуйста, ответа от администрации и не нужно создавать копии этой темы.[/COLOR][/I][/FONT][/SIZE][/CENTER]',
	  prefix: PIN_PREFIX,
	  status: true,
	},
	{
	  title: 'Взято на рассмотрение',
	  content:
		'[CENTER][SIZE=4][FONT=times new roman][I][COLOR=rgb(0, 255, 255)]Здравствуйте, уважаемый игрок.[/COLOR][/I][/FONT][/SIZE]<br><br>' +
		"[I][SIZE=4][COLOR=rgb(209, 213, 216)][FONT=times new roman]Ваша жалоба взята на рассмотрение.[/FONT][/COLOR][/SIZE][/I]<br><br>" +
		'[SIZE=4][FONT=times new roman][I][COLOR=rgb(209, 213, 216)]Не нужно создавать копии этой жалобы, ожидайте ответа в этой теме.[/COLOR][/I][/FONT][/SIZE][/CENTER]',
	  prefix: PIN_PREFIX,
	  status: true,
	},
	{
	  title: 'Док-ва предоставлены',
	  content:
		'[CENTER][I][COLOR=rgb(0, 255, 255)][FONT=times new roman][SIZE=4]Здравствуйте, уважаемый игрок.[/SIZE][/FONT][/COLOR][/I]<br><br>' +
		"[FONT=times new roman][SIZE=4][I][COLOR=rgb(209, 213, 216)]Доказательства предоставлены, наказание выдано верно.[/COLOR][/I][/SIZE][/FONT]<br><br>" +
		'[I][COLOR=rgb(255, 0, 0)][FONT=times new roman][SIZE=4]Закрыто.[/SIZE][/FONT][/COLOR][/I][/CENTER]',
	  prefix: CLOSE_PREFIX,
	  status: false,
	},
	{
	  title: 'Жалоба не по форме',
	  content:
		'[CENTER][FONT=times new roman][SIZE=4][I][COLOR=rgb(0, 255, 255)]Здравствуйте. уважаемый игрок.[/COLOR][/I][/SIZE][/FONT]<br><br>' +
		"[COLOR=rgb(209, 213, 216)][I][FONT=times new roman][SIZE=4]Ваша жалоба составлена не по форме. Внимательно прочитайте правила составления жалобы, которые закреплены в этом разделе.[/SIZE][/FONT][/I][/COLOR] <br><br>" +
		'[FONT=times new roman][SIZE=4][I][COLOR=rgb(255, 0, 0)]Закрыто.[/COLOR][/I][/SIZE][/FONT][/CENTER]',
	  prefix: CLOSE_PREFIX,
	  status: false,
	},
	{
	  title: 'Передано ГА',
	  content:
		'[CENTER][FONT=times new roman][SIZE=4][I][COLOR=rgb(0, 255, 255)]Здравствуйте, уважаемый игрок.[/COLOR][/I][/SIZE][/FONT]<br><br>' +
		"[COLOR=rgb(209, 213, 216)][I][FONT=times new roman][SIZE=4]Ваша жалоба переадресована Главному Администратору.[/SIZE][/FONT][/I][/COLOR]<br><br>" +
        '[FONT=times new roman][SIZE=4][I][COLOR=rgb(209, 213, 216)]Ожидайте ответа в данной теме, копии создавать не нужно.[/COLOR][/I][/SIZE][/FONT][/CENTER]',
	  prefix: PIN_PREFIX,
	  status: true,
	},
    {
      title: 'Ответ дан раннее',
      content:
        '[CENTER][COLOR=rgb(0, 255, 255)][FONT=times new roman][SIZE=4]Здравствуйте, уважаемый игрок.[/SIZE][/FONT][/COLOR]<br><br>' +
        "[SIZE=4][FONT=times new roman][COLOR=rgb(209, 213, 216)]Ответ был дан ранее. Прекратите создавать копии.[/COLOR][/FONT][/SIZE]<br><br>" +
        '[COLOR=rgb(255, 0, 0)][FONT=times new roman][SIZE=4]Закрыто.[/SIZE][/FONT][/COLOR][/CENTER]',
      prefix: CLOSE_PREFIX,
      status: false,
    },
    {
      title: 'Админ ошибся',
      content:
        '[CENTER][COLOR=rgb(0, 255, 255)][FONT=times new roman][SIZE=3]Здравствуйте уважаемый игрок.[/SIZE][/FONT][/COLOR]<br><br>' +
        "[COLOR=rgb(209, 213, 216)][FONT=times new roman][SIZE=3]Администратор допустил ошибку.<br><br>" +
        "Ваше наказание будет снято в течение 12-ти часов.[/SIZE][/FONT][/COLOR]<br><br>" +
        '[COLOR=rgb(255, 0, 0)][FONT=times new roman][SIZE=3]Закрыто.[/SIZE][/FONT][/COLOR][/CENTER]',
      prefix: ACCEPT_PREFIX,
      status: false,
    }
];

$(document).ready(() => {
	// Загрузка скрипта для обработки шаблонов
	$('body').append('<script src="https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.js"></script>');

	// Добавление кнопок при загрузке страницы
	addButton('На рассмотрение', 'pin');
    addButton('Закрыто', 'close');
	addButton('Одобрено', 'accepted');
	addButton('Отказано', 'unaccept');
	addButton('Ответы', 'selectAnswer');


	// Поиск информации о теме
	const threadData = getThreadData();

	$('button#pin').click(() => editThreadData(PIN_PREFIX, true));
	$('button#accepted').click(() => editThreadData(ACCEPT_PREFIX, false));
	$('button#teamProject').click(() => editThreadData(COMMAND_PREFIX, true));
	$('button#unaccept').click(() => editThreadData(UNACCEPT_PREFIX, false));

	$(`button#selectAnswer`).click(() => {
		XF.alert(buttonsMarkup(buttons), null, 'Выберите ответ:');
		buttons.forEach((btn, id) => {
			if(id > 0) {
				$(`button#answers-${id}`).click(() => pasteContent(id, threadData, true));
			} else {
				$(`button#answers-${id}`).click(() => pasteContent(id, threadData, false));
			}
		});
	});
});

function addButton(name, id) {
$('.button--icon--reply').before(
  `<button type="button" class="button rippleButton" id="${id}" style="margin: 3px;">${name}</button>`,
);
}

function buttonsMarkup(buttons) {
return `<div class="select_answer">${buttons
  .map(
	(btn, i) =>
	  `<button id="answers-${i}" class="button--primary button ` +
	  `rippleButton" style="margin:5px"><span class="button-text">${btn.title}</span></button>`,
  )
  .join('')}</div>`;
}

function pasteContent(id, data = {}, send = false) {
	const template = Handlebars.compile(buttons[id].content);
	if ($('.fr-element.fr-view p').text() === '') $('.fr-element.fr-view p').empty();

	$('span.fr-placeholder').empty();
	$('div.fr-element.fr-view p').append(template(data));
	$('a.overlay-titleCloser').trigger('click');

	if(send == true){
		editThreadData(buttons[id].prefix, buttons[id].status);
		$('.button--icon.button--icon--reply.rippleButton').trigger('click');
	}
}

function getThreadData() {
const authorID = $('a.username')[0].attributes['data-user-id'].nodeValue;
const authorName = $('a.username').html();
const hours = new Date().getHours();
return {
  user: {
	id: authorID,
	name: authorName,
	mention: `[USER=${authorID}]${authorName}[/USER]`,
  },
  greeting: () =>
	4 < hours && hours <= 11
	  ? 'Доброе утро'
	  : 11 < hours && hours <= 15
	  ? 'Добрый день'
	  : 15 < hours && hours <= 21
	  ? 'Добрый вечер'
	  : 'Доброй ночи',
};
}

function editThreadData(prefix, pin = false) {
// Получаем заголовок темы, так как он необходим при запросе
	const threadTitle = $('.p-title-value')[0].lastChild.textContent;

	if(pin == false){
		fetch(`${document.URL}edit`, {
		  method: 'POST',
		  body: getFormData({
			prefix_id: prefix,
			title: threadTitle,
			_xfToken: XF.config.csrf,
			_xfRequestUri: document.URL.split(XF.config.url.fullBase)[1],
			_xfWithData: 1,
			_xfResponseType: 'json',
		  }),
		}).then(() => location.reload());
	}
	if(pin == true){
		fetch(`${document.URL}edit`, {
		  method: 'POST',
		  body: getFormData({
			prefix_id: prefix,
			title: threadTitle,
			sticky: 1,
			_xfToken: XF.config.csrf,
			_xfRequestUri: document.URL.split(XF.config.url.fullBase)[1],
			_xfWithData: 1,
			_xfResponseType: 'json',
		  }),
		}).then(() => location.reload());
	}
}

function getFormData(data) {
	const formData = new FormData();
	Object.entries(data).forEach(i => formData.append(i[0], i[1]));
	return formData;
  }
})();
